LICENSE `Written in 2014 by Petar Maymounkov.
It helps future understanding of past knowledge to save
this notice, so peers of other times and backgrounds can
see history clearly.`

HelloWorld {
	h Harness
	h:Address = ":9090"
	h:Index = {
		petar {
			Header {}
			Status 200
			Body "Hi, this is Petar."
		}
		escher {
			Header {}
			Status 200
			Body "Hi, this is Escher."
		}
		Header {}
		Status 200
		Body "Hello, world!"
	}
}

Harness {
	Ignore = `Harness takes a string :Address and an :Index that routes the URL paths to HTTP response content.`

	s http.Server
	s:Start = ystart:
	ystart Fork
	ystart:Address = :Address
	s:RequestResponse = x:RequestResponse

	x responseLang
	x:Index = :Index
	z:Index = x:

	z escher.QuickMaterialize
	z:Value = r:
	r Repeat
	r:Value = {
		ylkp _.Fork
		ylkp:Address = @http.Request.Path
		ylkp:Index = @index
		ylkp: = lkp:View
		lkp _.index.Lookup

		lkp:Found = logf:Found
		logf: = join:Found
		logf _.Show2

		lkp:NotFound = lognf:NotFound
		lognf: = notFound:Door
		lognf _.Show2

		notFound _.OneWayDoor
		notFound:To = join:NotFound
		notFound:From = {
			Header {}
			Status 404
			Body "Escher web server: Address not found."
		}

		join _.Star
		join: = http.Respond
	}
	z:Residue = Ignore
}

responseLang {
	x Fork
	x: = :

	x:http = :RequestResponse
	x:_ = re_:
	x:index = reIndex:

	re_ Repeat
	re_:Value = escher.Index

	reIndex Repeat
	reIndex:Value = :Index
}
