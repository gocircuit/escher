FigureScanPrint {
	fig1 *FigurePngSvg
	fig1:Image = "scanprint"
	fig1:Width = "400px"
	fig1:Caption = `*`
	fig1: = :
}

FigureTelescope {
	fig2 *FigurePngSvg
	fig2:Image = "telescope"
	fig2:Width = "600px"
	fig2:Caption = `This is a <a href="syntax.html">symbolic representation</a>
	of two circuit designs, named <code>App</code> and <code>Database</code>.
	The illustration omits valve names.`
	fig2: = :
}

FigureExpanded {
	fig3 *FigurePngSvg
	fig3:Image = "expanded"
	fig3:Width = "500px"
	fig3:Caption = `The inversion of colors — from white-on-black in the enclosing circuit, to
	black-on-white in the substituted circuits — is a visual symbolism indicating that
	the substitutions are separate data-structures from the enclosing one. Specifically,
	the visual links that cross circuits are not explicitly represented in the data structure.
	This can be accomplished by flattening (see below).`
	fig3: = :
}

FigureFlattened {
	fig4 *FigurePngSvg
	fig4:Image = "flattened"
	fig4:Width = "500px"
	fig4:Caption = `After flattening circuits recursively, all gates end up in the same giant circuit.
	In order to preserve the circuit invariant that no two gates have the same name,
	gates are automatically renamed to reflect the root-to-leaf path to them in the unflattened circuit.`
	fig4: = :
}
